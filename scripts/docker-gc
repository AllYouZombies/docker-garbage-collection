#!/bin/sh

# Yes, I know about docker system prune -a -f
# But it removes all volumes that are not used by at least one container
# at the moment. So, if you have a stopped container that uses a volume,
# it will be removed. This script removes only unused images, networks
# and containers. It is useful for development, when you have a lot of
# stopped containers and unused images and networks.
# Your volumes - your responsibility. If you remove a volume, you will lose
# all data in it. So, be careful with docker system prune -a -f.

echo "------------------------------------------------------------"
printf "\n%s\nRemoving all stopped containers" "$(date)"
docker container prune -f
printf "\n%s\nRemoved all stopped containers" "$(date)"
echo
echo "------------------------------------------------------------"
printf "\n%s\nRemoving all unused images" "$(date)"
docker image prune -a -f
printf "\n%s\nRemoved all unused images" "$(date)"
echo
echo "------------------------------------------------------------"
printf "\n%s\nRemoving all unused networks" "$(date)"
docker network prune -f
printf "\n%s\nRemoved all unused networks" "$(date)"
echo